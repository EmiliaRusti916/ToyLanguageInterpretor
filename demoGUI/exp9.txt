Program ID: 0
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 0
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 1
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 1
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 1
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 1
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 2
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 2
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 2
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 3
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 3
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 3
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 3
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 3
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 3
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 3
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 4
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 4
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 4
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 4
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[2->2 ]

Program ID: 5
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[2->2 ]

Program ID: 5
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 5
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 6
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 6
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 6
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 6
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 6
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 6
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 6
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 7
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 7
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 12
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 12
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 12
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 12
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 12
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 12
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 12
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[2->2 ]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[2->2 ]

Program ID: 14
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 15
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 15
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[2->2 ]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[2->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 16
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 16
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 16
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[3->4 ]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[3->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[4->6 ]

Program ID: 20
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[4->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 22
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 22
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 22
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[5->8 ]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[5->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[2->2 ]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[2->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 14
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=2}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 16
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 16
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 16
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[3->4 ]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[3->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=4}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[4->6 ]

Program ID: 20
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[4->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 20
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=6}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 22
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 22
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 22
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[5->8 ]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[5->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=8}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 13
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 13
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=1}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 14
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 14
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 14
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 15
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 15
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 15
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 15
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 15
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 15
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 15
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=2}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 16
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 16
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 16
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 17
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 17
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=3}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 18
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 18
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 18
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 19
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 19
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 19
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 19
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=4}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 20
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 20
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 20
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 21
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 21
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 21
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 21
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 21
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=6 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 21
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=6 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 21
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=6 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 22
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 22
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 22
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 23
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=7 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=7 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 23
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=7 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 24
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 24
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 24
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 25
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 25
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 25
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 25
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 25
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=8 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 25
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=8 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 25
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=8 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 26
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 26
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 26
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 27
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 27
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 27
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 27
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 27
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=9 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 27
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=9 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 27
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=9 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 28
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 28
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 28
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 29
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 29
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 29
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 29
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 29
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=10 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[10->9 ]

Program ID: 29
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=10 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[10->9 ]

Program ID: 29
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=10 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
FileTable: 
 []
Heap: 
[10->9 ]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 13
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 13
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=1}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 14
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 14
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 14
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 15
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 15
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 15
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 15
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 15
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 15
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=2}
List: 
[0, 1]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 15
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=3 locationType=int}, counter=2}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 16
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 16
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 16
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 17
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[3->2 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 17
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=3}
List: 
[0, 1, 2]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 17
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=4 locationType=int}, counter=3}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 18
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 18
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 18
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 19
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[4->3 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 19
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 19
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 19
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=4}
List: 
[0, 1, 2, 3]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 19
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=5 locationType=int}, counter=4}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 20
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 20
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 20
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 21
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[5->4 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 21
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 21
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 21
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 21
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=6 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 21
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=6 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 21
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=6 locationType=int}, counter=5}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 22
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 22
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 22
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 23
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[6->5 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=7 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 23
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=7 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 23
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=7 locationType=int}, counter=6}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 24
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 24
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 24
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 25
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[7->6 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 25
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 25
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 25
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 25
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=8 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 25
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=8 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 25
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=8 locationType=int}, counter=7}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 26
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 26
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 26
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 27
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[8->7 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 27
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 27
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 27
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 27
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=9 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 27
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=9 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 27
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=9 locationType=int}, counter=8}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 28
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 28
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 28
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 29
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[9->8 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 29
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=10}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 29
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 29
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[]

Program ID: 29
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=10 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[10->9 ]

Program ID: 29
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=10 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8]
FileTable: 
 []
Heap: 
[10->9 ]

Program ID: 29
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=10 locationType=int}, counter=9}
List: 
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
FileTable: 
 []
Heap: 
[10->9 ]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 13
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=2}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 13
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=2 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[2->1 ]

Program ID: 9
Stack: 
[(VarDeclStmt{s='a', type=RefType(int)};(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))))]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))), VarDeclStmt{s='a', type=RefType(int)}]
SymbolTable: 
 {}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[(VarDeclStmt{s='counter', type=int};While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), VarDeclStmt{s='counter', type=int}]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 10
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[(HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), (Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a')), HeapAllocationStatement(var='a', exp=VarExp(id='counter'))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1)), Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[printHeapReadExp(exp=VarExp(id='a'))]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 9
Stack: 
[While(RelationalExp{exp1=VarExp(id='counter'), exp2=ValExp(v=10), op=1})(Fork(Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a')))));AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))), AssignStmt(counter=ArthExp(exp1=VarExp(id='counter'), exp2=ValExp(v=1), operator=1))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 11
Stack: 
[]
SymbolTable: 
 {a=RefValue{address=1 locationType=int}, counter=0}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

Program ID: 12
Stack: 
[Fork((HeapAllocationStatement(var='a', exp=VarExp(id='counter'));printHeapReadExp(exp=VarExp(id='a'))))]
SymbolTable: 
 {a=RefValue{address=0 locationType=int}, counter=1}
List: 
[0]
FileTable: 
 []
Heap: 
[1->0 ]

